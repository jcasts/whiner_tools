= Whiner Tools

* http://yaksnrainbows.com

== Description

Collection of helper methods that display information that could typically be in comments, to the command line: specifically 'todo' and 'deprecated'. Whiner Tools also comes with a powerful logger that can output to any IO type object or proc.

== Examples

Use deprecated to flag a method as deprecated and raise a warning.

    deprecated :use => "new_method"
      #=> "Deprecation Warning: '#{caller[0]}' is deprecated. Use 'new_method'."
    deprecated :was => "old_method", :use => "new_method"
      #=> "Deprecation Warning: 'old_method' is deprecated. Use 'new_method'."
    deprecated :message => "Don't use this!"
      #=> "Deprecation Warning: Don't use this!"


Document TODOs:

    TODO %{This is stuff to do. DON'T FORGET!!!}
      #=> "TODO [#{caller[0]}]: This is stuff to do. DON'T FORGET!!!"
Avoid calling TODO from methods as it will output TODOs repetedly.


Set up a default logger accessible from the 'logger' method:

    setup_logger $stdout, :format => "$L [$T] ($B): $M", :time_format => "%d/%b/%Y"
      #=> <WhinerTools::Logger:0x12a39a0 @targets=[#<WhinerTools::Logger::Target:0x12a393c @out=#<IO:0x2f7d8>, @log_level=0, @format="$L [$T] ($B): $M", @time_format => "%d/%b/%Y">]>


Using the logger:

    logger.add_target File.open("log_file.txt")
    logger.warn "This is a warning!"
      # $stdout #
      #=> WARN [03/Aug/2009] ((irb):46:in `irb_binding'): This is a warning!
      
      # log_file.txt #
      #=> WARN [03/Aug/2009:10:15:10 -0700] ((irb):46:in `irb_binding'): This is a warning!